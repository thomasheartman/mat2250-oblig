#+title: MAT2250 mandatory assignment
#+author: Thomas Heartman
#+date: {{{time(%Y-%m-%d)}}}
#+options: toc:nil
#+latex_class: uio-memoir
#+description: This is my description.

#+begin_problem
*Stirling numbers of the 2nd kind and generating functions*

1. Use a counting argument to show that  the Stirling numbers of the second kind satisfy $S_{n, 2} = 2^{n-1} -1$ for $n\geq 1$ (recall  that $S_{0, k} = 0$). Express the generating function $$\mathcal{S}_2(z) = \sum_{n = 0}^\infty S_{n, 2} z^n$$ as a rational function.

   #+begin_answer
   First, let's show that the Stirling numbers of the second kind
   satisfy $S_{n, 2} = 2^{n-1} - 1$ for $n \ge 1$.

   Let's start by analyzing the well-known recurrence relation for
   Stirling numbers of the second kind: $S_{n, k} = S_{n-1, k-1} + k S_{n-1,
   k}$. Let /X/ be an /n/-set and /a/ \in /X/. Then the first summand is
   the number of set partitions where /a/ is the only element of its
   partition. That is, let $P_{k}$ be the /k/-th partition of $X$, $a \in
   P_k$, and $|P_k| = 1$. This leaves us to partition the remaining $n -
   1$ elements into $k-1$ partitions. For the second summand, assume
   that /a/ is not the only member of its partition. That means we
   can remove /a/, and still have /k/ non-empty partitions, yielding
   $S_{n-1, k}$. Because inserting /a/ into any of these /k/ partitions
   would yield a different configuration, we have to multiply $S_{n-1,k}$
   by /k/ to get all possible configurations.

   In our case, however, we're only dealing with partitioning a set
   into 2, so the recurrence relation takes on the simpler form $S_{ n,2
   } = S_{n-1,1} + 2S_{n-1, 2}$. This further simplifies to $S_{n,2} = 1 +
   2S_{n-1, 2}$, because $S_{n, 1} = 1$ for all $n \ge 1$. We can test that
   the Stirling numbers of the second kind satisfy the equation $S_{n,2}
   = 2^{n-1} - 1$ for $n = 1$ and $n=2$. To show that it holds for
   arbitrary /n/, we'll use induction.

   Assume that $S_{n,2} = 2^{n-1} - 1$ holds for some value of $n$. We'll
   show that in that case, it also holds for $n+1$. If we shift the
   equation's indices down by one, we get that $S_{n-1, 2} = 2^{n-2} - 1$.
   We can plug that into the equation and get:

   \begin{align*}
   S_{n,2} & = S_{n-1,1} + 2S_{n-1, 2}\\
   & = 1 + 2(2^{n-2} - 1) \\
   & = 1 + 2^{n-1} - 2 \\
   & = 2^{n-1} - 1
   \end{align*}
   #+end_answer



2. Use the recurrence relation $S_{n, k} = S_{n-1, k-1} + k S_{n-1, k}$  and the formula found above for $\mathcal{S}_2(z)$ to prove that $$\mathcal{S}_3(z) := \sum_{n = 0}^\infty S_{n, 3} z^n =  \frac{z^3}{(1-z)(1-2z)(1-3z)}.$$

3. Use a partial fraction decomposition of the generating function $\mathcal{S}_3(z)$ to obtain a closed formula for $S_{n, 3}$.
#+end_problem

#+begin_problem
*Graphs from sets*

1. Recall the hypercube graph is $Q_n = (V(Q_n), E(Q_n))$ where $$V(Q_n) = \{ u_1 \dots u_n \ | \ u_i = 0, 1 \}$$ and $$E(Q_n) = \{ uv \ | \ u, v \text{ binary words differing in exactly one letter} \}.$$ What are the sizes of $V(Q_n)$ and $E(Q_n)$?

   #+begin_answer
   If $V(Q_n) = \{u_1 \dots u_n \ | \ u_i = 0, 1\}$, then the size of $V(Q_n)$
   is the number of binary words of length $n$. In other words,
   $|V(Q_n)| = 2^n$.

   For every binary word of length $n$, there are exactly $n$ other
   binary words of the same length that differ in exactly one
   character. Thus, every vertex of the hypercube graph must have
   degree $n$.

   Theorem 6.1 in Aigner states that: Let G = (V, E) be a graph. Then $$\sum_{u \in V}d(u) = 2|E|$$.

   In other words: Every edge in $E$ connects to exactly two vertices.

   Using this, we find that $E(Q_n) = \frac{n2^n}{2} = n2^{n-1}$.
   #+end_answer

2. Assuming all edges have weight 1, what is the distance in $Q_n$ from $00\dots00$ to $u = u_1u_2 \dots u_n$ ? What is the distance in $Q_n$ between two arbitrary words $u$ and $v$?

   #+begin_answer
   To get from $00\dots00$ to $u = u_1 u_2 \dots u_n$ we need to traverse
   as many edges as there are ones in $u$. In other words, if you treat
   $u$ as a sequence of numbers, you can take the sum of these numbers
   and find the distance.

   More generally, we can expand this to the distance between two
   arbitrary vertices by treating each word as a vector and
   subtracting one from the other. The resulting vector will be a vector $w$
   of length $n$ with each term being one of $-1$, $0$, and $1$.
   Here, every non-zero term $c$ of $w$ indicates that $u$ and $v$
   differ at index $c$. Because every edge takes us one step
   closer to our goal, the distance between $u$ and $v$ is the number
   of non-zero terms of $w$.

   More succinctly, this can be thought of as $u \oplus v$ or $u XOR v$, where $\oplus$ is the "exclusive or" logical operation. ($\veebar$). Summing this binary word yields the distance from $u$ to $v$.
   #+end_answer

3. Orient the edge $k = uv$  of $Q_n$ so that  $u = k^-$ and $v = k^+$ if the word $v$ contains more $1$'s  than $u$. Prove that the orientation is acyclic. Which word corresponds to a sink and which word is a source?

   #+begin_answer
   If an edge is directed from $u$ to $v$ if and only if $v$ has more
   $1$'s than $u$, then the graph's source must be $00\dots00$ and the
   sink $11\dots11$.

   Next, let's examine why the orientation is acyclic.

   #+begin_proof
   Aigner says that: A graph $\overrightarrow{G}$ that contains no directed
   circuits is called /acyclic/. Every undirected graph $G$ can be
   made into an acyclic graph through a suitable orientation. If we
   can number the vertices $u_1, u_2 \dots u_n$, and for u_iu_j \in $E$
   always choose the orientation $u_i \rightarrow u_2$ with $i < j$, a
   directed path $u_1, u_2, \dots, u_n$ would then satisfy $i_1 < i_2 <
   i_3 < \cdots$, and thus never close into a circuit.

   Thus, to prove that the orientation on $Q_n$ is acyclic, it suffices
   to prove that every path from the source $u$ to any other vertex in
   the graph satisfies the condition that $u_n < u_{n+1}$ when ordered
   according to the number of $1$'s in their respective words.

   If you take two binary words $a$ and $b$ that differ in only one
   character, the difference in number of $1$'s will always be $1$. If
   the character that differs is a $0$ in $a$, then it must be a $1$
   in $b$ and $b$ has one more $1$ than $a$. If the character is $1$
   in $a$, then it must be $0$ in $b$ and $a$ has one more $1$ than
   $b$.

   By definition, every word in $Q_n$ connects only to other words that
   differ in exactly one character. In other words, there is an unambiguous
   orientation between any two connected vertices.

   From this, we find that every word in $Q_n$ connects only to other
   words where there is a clear orientation. Or, put another way, a
   word $w_1$  is never connected to another word $w_2$ if they have the
   same number of $1$'s.

   Because every edge $u_iu_j \in E(Q_n)$ has a clear orientation, we can
   conclude that any set of edges in $E(Q_n)$ can never close into a
   circuit, and the proof is complete.
   #+end_proof
   #+end_answer

#+end_problem

#+begin_problem
*Greedy algorithms*

Consider the graph $G$ with weight function prescribed along its edges:


  \begin{center}\newcommand\size{3}% distance of nodes from center

    \begin{tikzpicture}

      \draw [thick,black] (0,0)-- (18:\size)  node [above, midway] {3};
      \draw [thick,black] (0,0)-- (90:\size)  node [left, midway] {2};
      \draw [thick,black] (0,0)-- (162:\size)  node [above, midway] {1};
      \draw [thick,black] (0,0)-- (234:\size)  node [above, midway] {1};
      \draw [thick,black] (0,0)-- (306:\size)  node [above, midway] {3};


      \draw[thick,black]  (18:\size)--(90:\size) node [above, midway] {4};
      \draw[thick,black]  (90:\size)--(162:\size) node [above, midway] {2};
      \draw[thick,black]  (162:\size)--(234:\size) node [left, midway] {3};
      \draw[thick,black]  (234:\size)--(306:\size) node [above, midway] {2};
      \draw[thick,black]  (18:\size)--(306:\size) node [right, midway] {4};

      \node[black,circle,draw, fill= white, inner sep=2pt] at (18:\size){$u_1$};
      \node[black,circle,draw, fill= white, inner sep=2pt] at (90:\size){$u_0$};
      \node[black,circle,draw, fill= white, inner sep=2pt]at (162:\size){$u_4$};
      \node[black,circle,draw, fill= white, inner sep=2pt] at (234:\size){$u_3$};
      \node[black,circle,draw, fill= white, inner sep=2pt] at (306:\size){$u_2$};
      \node[black,circle,draw, fill= white, inner sep=2pt] at (0:0){$u_5$};
    \end{tikzpicture}
  \end{center}


1. Run Dijkstra's algorithm from starting vertex  $u_0$ to find a tree containing all minimal weight paths from $u_0$ with the prescribed weight function. Write down which edge and vertex is selected at each step of the algorithm.

   What is the length of the shortest weighted path in $G$ from $u_0$ to $u_3$?

   #+begin_answer
   Running Dijkstra's algorithm from starting vertex $u_0$ in $G$
   yields the following sequence of edges and vertices.
   1. Pick vertex $u_0$. No edges. $l(u_0) = 0$.
   2. Pick vertex $u_5$, using edge $u_{0}u_5$. $l(u_{ 5 }) = 2$.
   3. Pick vertex $u_4$, using edge $u_{0}u_4$. $l(u_{ 4 }) = 2$.
   4. Pick vertex $u_3$, using edge $u_{ 5 }u_3$. $l(u_{ 3 }) = 2 + 1 = 3$.
   5. Pick vertex $u_1$, using edge $u_{ 0 }u_{1}$. $l(u_{ 1 }) = 4$.
   6. Pick vertex $u_2$, using edge $u_{ 5 }u_{2}$. $l(u_{ 2 }) = 2 + 3 = 5$.

   For the last step, we can choose between edges $u_{5}u_{2}$ and $u_{3}u_{2}$ as
   they both end up with the same distance ($2 + 3$ and $2 + 1 + 2$,
   respectively).

   The length of the shortest weighted path in $G$ from $u_{0}$ to $u_{3}$
   is $3$.
   #+end_answer

2. Run Kruskal's algorithm to find a minimal spanning tree of $G$ for the given weight function.

   What is the weight of a  minimal spanning tree in $G$? Is there a unique minimal spanning tree in $G$ with this weight function?

   #+begin_answer
   Running Kruskal's algorithm yields the following steps:
   1. Pick $u_{5}u_{4}$, $w = 1$
   2. Pick $u_{5}u_{3}$, $w = 1$
   3. Pick $u_{3}u_{2}$, $w = 2$
   4. Pick $u_{5}u_{0}$, $w = 2$
   5. Pick $u_{5}u_{1}$, $w = 3$

   This yields a minimal spanning tree with weight $9$. It is /not/
   unique, as we could also have chosen $u_{4}u_{0}$ in step 4, which
   would have yielded a different spanning tree with equal weight.
   #+end_answer

3. Show that if the greedy algorithm on matroids from Theorem 7.13  can select two distinct bases  $B_1$ and  $B_2$ of minimal weight, then there must exist $s_1 \in B_1$ and $s_2 \in B_2$ such that $w(s_1) = w(s_2)$. Conclude that if the weight function $w : S \to \mathbb{R}$  is an injective  map then the greedy algorithm selects a unique minimal basis of a matroid.

   Find an example of a weighted graph which shows that the converse to the above statement is false. Namely that there is a graph $G$ with weight function  $w : E \to \mathbb{R}$  which is not injective but the greedy algorithm still selects a unique minimal spanning tree.

   #+begin_answer
   Assume $B_1$ and $B_2$ are distinct bases of minimal weight. For
   these two bases to coexist, there must exist $s_1 \in B_{1}$ and $s_2
   \in B_2$ such that $w(s_1) = w(s_2)$ because of how the greedy algorithm works.

   Let $A_i \subseteq S$ be the elements chosen after $i$ steps of the
   algorithm and $X_i = \{ x \in S \setminus A_i \ | \ A_i \cup \{x\} \in \mathcal{U} \}$

   From the description, the algorithm always chooses some unselected
   edge of /minimal/ weight. That means that if there are two distinct
   bases of the same minimal weight, then the algorithm must have been
   presented with a choice between two distinct edges of equal weight
   at some point.

   From this, we can conclude that if every edge has a unique weight,
   that is $w(s_i) \ne w(s_j) \forall i,j \in S$, then the minimal basis
   produced by the algorithm will also be unique. In other words: if
   the weight function $w : S \rightarrow \mathbb{R}$ is injective, then the
   minimal basis chosen by the algorithm is unique.

   Regarding examples of a graph G with a non-injective weight
   function $w : E \rightarrow \mathbb{R}$ that still produces a unique minimal
   spanning tree, we needn't look further than paths. If G is a path,
   meaning every vertex has degree at least $1$ and at most $2$, then
   any algorithm that creates a spanning tree must by necessity choose
   every edge, regardless of what the weight function is. This is also
   true for trees and any graph without circuits.
   #+end_answer

#+end_problem

#+begin_problem
*Matchings*

1. Consider the bipartite graph:
   \begin{center}
     \begin{tikzpicture}
       \graph[nodes={draw, circle}, radius=.25cm,
         branch down=1 cm,       grow right sep=4cm]
             {subgraph I_nm [V={a, b, c, d}, W={1,...,4}];
               a -- { 2};
               b -- { 3, 4 };
               c -- { 1,2 };
               d -- { 1,2}
             };
     \end{tikzpicture}
   \end{center}

   Determine the matching number of $G$ and find a maximal matching.

   #+begin_answer
   The matching number of $G$ is $3$, and a maximal matching could
   look like this:


   \begin{center}
     \begin{tikzpicture}
       \graph[nodes={draw, circle}, radius=.25cm,
         branch down=1 cm,       grow right sep=4cm]
             {subgraph I_nm [V={a, b, c, d}, W={1,...,4}];
               b -- {  3 };
               c -- { 1 };
               d -- { 2}
             };
     \end{tikzpicture}
   \end{center}
   #+end_answer

2. The hypercube graph  $Q_n$ is bipartite, with the two disjoint vertex sets being determined by the binary  words containing an even or odd number of $1$'s. The matching number of $Q_n$ is $2^{n-1}$. Describe a maximal matching of $Q_n$.

   #+begin_answer
   A simple, maximal matching of $Q_n$ would be to interpret the binary
   words as binary numbers, and then match every even number with its
   successor. Because the difference in representation between a
   number and its successor in binary will always change the value of
   the last character, this is an easy matching to make.

   Thus, the edges of the graph are $u_{2k}u_{2k + 1}$ for $0 \leq k <
   \frac{n}{2}$.
   #+end_answer

3. Let  $S$ be the set of binary words of length $n$ with $k$ number of $1's$ and let $T$ be the set of binary words of length $n$ with $k+1$ number of  $1$'s. Let $E = \{st \ | \ s, t \text{ differ in exactly one letter}  \}$ and set  $H = (S \cup T, E)$ (notice $H$ is an induced subgraph of $Q_n$).
   - What are  the degrees in $H$  of vertices in $S$ and vertices in $T$?

   - Prove that for any subset $A$ of $S$  we have $(k+1) |N(A)|  \geq (n-k)  |A|$.

     Hint: consider the set of edges incident to $A$ and the set of edges incident to $N(A)$.

   - Use Hall's matching condition to conclude that $m(H) = |S|$ for  $k <n/2$.

   Conclude that there exists an injective map $f$ from the subsets of size $k$ of $\{1, \dots, n\}$ to the subsets of size $k+1$ of $\{1, \dots ,n\}$ satisfying $I \subset f(I)$ for $k < n/2$.

   #+begin_answer
   On the degrees in $H$ of vertices in $S$ and vertices in $T$:
   Because the vertices in $S$ can only connect to vertices with more
   $1$'s in them, we can only flip the characters in $s \in S$ that are
   $0$. Thus, $d(s) = n - k \forall s \in S$. For the vertices in $T$, this is
   the opposite: we can only flip the characters in $T$ which are
   $1$'s and there are $k + 1$ of them. Thus $d(t) = k + 1 \forall t \in T$.

   *Claim:* for any subset $A$ of $S$, we have $(k + 1)|N(A)| \ge (n-k)|A|$.

   #+begin_proof

   We know that $n-k$ is the degree of each vertex in $S$. We also
   know that the degree of each vertex in $T$ is $k + 1$. From this,
   we have that    $(k+1)|T| = (n - k)|S| = |E|$.

   Now choose $A \subseteq S$. Every $a \in A$ has degree $n-k$ and
   there are $n-k$ edges going between $A$ and $N(A)$.

   Next, let's examine $N(A)$. We know that every $t \in T$ has degree
   $k+1$ and that $N(A)$ is a subset of $T$. Thus, no $v \in N(A)$ can
   have degree $> k + 1$ and the maximal possible number of edges
   connecting to $A$ is $(k + 1)|N(A)$. Thus we have that $(k + 1)|N(A)| \ge (n-k)|A|$.

   Said differently: if $deg(v) = k + 1 \forall v \in N(A)$, then $(k +
   1)|N(A)| = (n-k)|A|$. If there is a vertex with degree less than
   $k + 1$, then that means it connects to a $u \in S \setminus A$ and we have
   that $(k + 1)|N(A)| > (n-k)|A|$. This completes the proof.
   #+end_proof

   *Hall's matching condition*: Let $G = (S + T, E)$ be a bipartite
   graph. Then $m(G) = |S|$ if and only if $|A| \le |N(A)|$ for all $A
   \subseteq S$.

   Theorem 8.4: Let $G = (S + T, E)$ be a bipartite graph. Then
   $$m(G) = |S| - \max_{A \subseteq S}(|A| - |N(A)|).$$_{}

   There are $\binom{n}{k}$ vertices in $S$ and $\binom{n}{k+1}$ in
   $T$. We know that the binomial coefficients increase strictly for
   $0 \leq k \leq \frac{n}{2}$. If $k<\frac{n}{2}$, that means that $k +
   1 \leq \frac{n}{2}$ and that $|T| > |S|$ .

   We also proved that $(k+1)|N(A)| \geq (n-k)|A| \forall A \subseteq S$. Using
   this and the fact that for $k < \frac{n}{2}, |S| < |T|$ and $k+1 \leq
   n-k$, we can conclude that $|A| < |N(A)| \forall A \subseteq S$ and that
   $m(H) = |S|$ when $k < \frac{n}{2}$.

   Finally, let's turn our attention to concluding that there exists
   an injective map $f$ from the subsets of size $k$ of ${1,\dots,n_{}}$ to
   the subsets of size $k +1$ of ${1,\dots,n}$ satisfying $I \subset f(I)$ for
   $k < \frac{n}{2}$. While the relation might not be at obvious at
   first, this is actually the same problem as the one we just solved.

   We can represent the subsets of size $k$ as binary strings of
   length $n$ where $1$ means the element is included and $0$ means it
   isn't. Assume that the binary strings represent the elements in
   ascending order (though any ordering would work).

   Satisfying $I \subset f(I)$ then turns into the act of adding one extra
   element into the set. As we have seen, there are $n-k$ choices for
   which element to choose, and it maps to flipping one of the
   $0$-characters in the binary representation.

   Because we have also seen that $m(H) = |S|$ for $k<\frac{n}{2}$, we
   can then conclude that there exists an injective (but not
   surjective!) map from the $k$-subsets to the $(k-1)$-subsets of
   ${1,\dots,n}$ where $I \subset f(I)$ for $k < \frac{n}{2}$.
   #+end_answer

#+end_problem
